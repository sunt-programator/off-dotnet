root = true

[*]
indent_style = space
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true

# ReSharper properties
resharper_max_initializer_elements_on_line = 1
resharper_wrap_array_initializer_style = chop_if_long

[*.cs]
indent_size = 4
dotnet_sort_system_directives_first = true
max_line_length = 200

# Don't use this. qualifier
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# use int x = .. over Int32
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion

# use int.MaxValue over Int32.MaxValue
dotnet_style_predefined_type_for_member_access = true:suggestion

# Require var all the time.
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = false:suggestion
csharp_style_var_elsewhere = true:suggestion

# Disallow throw expressions.
csharp_style_throw_expression = false:suggestion

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true

# Namespace settings
csharp_style_namespace_declarations = file_scoped:silent

# Brace settings
csharp_prefer_braces = true:silent # Prefer curly braces even for one line of code
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_expression_bodied_methods = false:warning
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_operators = false:warning
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:warning
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_prefer_top_level_statements = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# IDE0090: Use 'new(...)'
csharp_style_implicit_object_creation_when_type_is_apparent = false:warning

[*.{xml,config,*proj,nuspec,props,resx,targets,yml,tasks}]
indent_size = 2

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

[*.json]
indent_size = 2

[*.{ps1,psm1}]
indent_size = 4

[*.sh]
indent_size = 4
end_of_line = lf

[*.{razor,cshtml}]
charset = utf-8-bom

[*.{cs,vb}]

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.ca1018.severity = warning

# CA1047: Do not declare protected member in sealed type
dotnet_diagnostic.ca1047.severity = warning

# CA1305: Specify IFormatProvider
dotnet_diagnostic.ca1305.severity = warning

# CA1507: Use nameof to express symbol names
dotnet_diagnostic.ca1507.severity = warning

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.ca1725.severity = suggestion

# CA1802: Use literals where appropriate
dotnet_diagnostic.ca1802.severity = warning

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.ca1805.severity = warning

# CA1810: Do not initialize unnecessarily
dotnet_diagnostic.ca1810.severity = warning

# CA1821: Remove empty Finalizers
dotnet_diagnostic.ca1821.severity = warning

# CA1822: Make member static
dotnet_diagnostic.ca1822.severity = warning
dotnet_code_quality.ca1822.api_surface = private, internal

# CA1823: Avoid unused private fields
dotnet_diagnostic.ca1823.severity = warning

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.ca1825.severity = warning

# CA1826: Do not use Enumerable methods on indexable collections. Instead use the collection directly
dotnet_diagnostic.ca1826.severity = warning

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.ca1827.severity = warning

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.ca1828.severity = warning

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.ca1829.severity = warning

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.ca1830.severity = warning

# CA1831: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
# CA1832: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
# CA1833: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.ca1831.severity = warning
dotnet_diagnostic.ca1832.severity = warning
dotnet_diagnostic.ca1833.severity = warning

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.ca1834.severity = warning

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.ca1835.severity = warning

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.ca1836.severity = warning

# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.ca1837.severity = warning

# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.ca1838.severity = warning

# CA1839: Use 'Environment.ProcessPath'
dotnet_diagnostic.ca1839.severity = warning

# CA1840: Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.ca1840.severity = warning

# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.ca1841.severity = warning

# CA1842: Do not use 'WhenAll' with a single task
dotnet_diagnostic.ca1842.severity = warning

# CA1843: Do not use 'WaitAll' with a single task
dotnet_diagnostic.ca1843.severity = warning

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.ca1844.severity = warning

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.ca1845.severity = warning

# CA1846: Prefer AsSpan over Substring
dotnet_diagnostic.ca1846.severity = warning

# CA1847: Use string.Contains(char) instead of string.Contains(string) with single characters
dotnet_diagnostic.ca1847.severity = warning

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.ca2007.severity = warning

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.ca2008.severity = warning

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.ca2009.severity = warning

# CA2011: Avoid infinite recursion
dotnet_diagnostic.ca2011.severity = warning

# CA2012: Use ValueTask correctly
dotnet_diagnostic.ca2012.severity = warning

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.ca2013.severity = warning

# CA2014: Do not use stackalloc in loops.
dotnet_diagnostic.ca2014.severity = warning

# CA2016: Forward the 'CancellationToken' parameter to methods that take one
dotnet_diagnostic.ca2016.severity = warning

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.ca2200.severity = warning

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.ca2208.severity = warning

# CA2245: Do not assign a property to itself
dotnet_diagnostic.ca2245.severity = warning

# CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.ca2246.severity = warning

# CA2249: Use string.Contains instead of string.IndexOf to improve readability.
dotnet_diagnostic.ca2249.severity = warning

# IDE0005: Remove unnecessary usings
dotnet_diagnostic.ide0005.severity = warning

# IDE0011: Curly braces to surround blocks of code
dotnet_diagnostic.ide0011.severity = warning

# IDE0035: Remove unreachable code
dotnet_diagnostic.ide0035.severity = warning

# IDE0036: Order modifiers
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:suggestion
dotnet_diagnostic.ide0036.severity = warning

# IDE0043: Format string contains invalid placeholder
dotnet_diagnostic.ide0043.severity = warning

# IDE0044: Make field readonly
dotnet_diagnostic.ide0044.severity = warning

# IDE0051: Remove unused private members
dotnet_diagnostic.ide0051.severity = warning

# IDE0055: All formatting rules
dotnet_diagnostic.ide0055.severity = suggestion

# IDE0059: Unnecessary assignment to a value
dotnet_diagnostic.ide0059.severity = warning

# IDE0060: Remove unused parameter
dotnet_code_quality_unused_parameters = non_public
dotnet_diagnostic.ide0060.severity = warning

# IDE0062: Make local function static
dotnet_diagnostic.ide0062.severity = warning

# IDE0161: Convert to file-scoped namespace
dotnet_diagnostic.ide0161.severity = warning

# IDE2000: Disallow multiple blank lines
dotnet_style_allow_multiple_blank_lines_experimental = false
dotnet_diagnostic.ide2000.severity = warning

[{eng/tools/**.cs, **/{test,testassets,samples,Samples,perf}/**.cs}]
# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.ca1018.severity = suggestion
# CA1507: Use nameof to express symbol names
dotnet_diagnostic.ca1507.severity = suggestion
# CA1802: Use literals where appropriate
dotnet_diagnostic.ca1802.severity = suggestion
# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.ca1805.severity = suggestion
# CA1810: Do not initialize unnecessarily
dotnet_diagnostic.ca1810.severity = suggestion
# CA1822: Make member static
dotnet_diagnostic.ca1822.severity = suggestion
# CA1823: Avoid zero-length array allocations
dotnet_diagnostic.ca1825.severity = suggestion
# CA1826: Do not use Enumerable methods on indexable collections. Instead use the collection directly
dotnet_diagnostic.ca1826.severity = suggestion
# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.ca1827.severity = suggestion
# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.ca1829.severity = suggestion
# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.ca1834.severity = suggestion
# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.ca1835.severity = suggestion
# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.ca1837.severity = suggestion
# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.ca1838.severity = suggestion
# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.ca1841.severity = suggestion
# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.ca1844.severity = suggestion
# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.ca1845.severity = suggestion
# CA1846: Prefer AsSpan over Substring
dotnet_diagnostic.ca1846.severity = suggestion
# CA1847: Use string.Contains(char) instead of string.Contains(string) with single characters
dotnet_diagnostic.ca1847.severity = suggestion
# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.ca2008.severity = suggestion
# CA2012: Use ValueTask correctly
dotnet_diagnostic.ca2012.severity = suggestion
# CA2249: Use string.Contains instead of string.IndexOf to improve readability.
dotnet_diagnostic.ca2249.severity = suggestion
# IDE0005: Remove unnecessary usings
dotnet_diagnostic.ide0005.severity = suggestion
# IDE0044: Make field readonly
dotnet_diagnostic.ide0044.severity = suggestion
# IDE0051: Remove unused private members
dotnet_diagnostic.ide0051.severity = suggestion
# IDE0059: Unnecessary assignment to a value
dotnet_diagnostic.ide0059.severity = suggestion
# IDE0060: Remove unused parameters
dotnet_diagnostic.ide0060.severity = suggestion
# IDE0062: Make local function static
dotnet_diagnostic.ide0062.severity = suggestion

# CA2016: Forward the 'CancellationToken' parameter to methods that take one
dotnet_diagnostic.ca2016.severity = suggestion

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion
